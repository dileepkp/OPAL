@prefix c: <http://www.semanticweb.org/yzhao30/ontologies/2015/7/c#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix pa: <http://www.semanticweb.org/aidb/ontologies/BugFindingOntology#> .
@prefix fl: <http://www.semanticweb.org/aidb/ontologies/FileLibraryOntology#> .
@prefix file0: <ftp:/home/demo/Downloads/PATO-ROSE-master/tools/onto-build-rose/test/word2vec.c#> .



# Analyze For statement
[ForStatement1:
		(1 1 execute(?prev,?st,?cond,?pp)),
		(?st rdf:type c:ExpressionStatement),
		(?st c:hasParent ?forSt),
		(?forSt rdf:type c:ForStatement),
		noValue(?forSt, pa:iteration)
		(?forSt c:hasForTest ?st)
		makeTemp(?temp)
->
		(1 1 updateOtherVar(?prev,?st,?cond,?pp,1))
		(1 1 createNoConditionList(?st,?cond,?st))		
		(1 1 createYesConditionList(?st,?cond,?st))
		(?forSt pa:iteration 0)
		(?temp rdf:type pa:loopVarList)
		(?temp pa:loop ?forSt)
		(1 1 copyLoopVariables(?prev,?forSt,?st,?pp,0))
		print('for st1')	
]


#invoke this from For condition 1
[copyLoopVariables:

		(1 1 copyLoopVariables(?prev,?forSt,?st,?pp,?iter))
#		(?loopVarList rdf:type pa:loopVarList)
#		(?loopVarList pa:loop ?forSt)	
		
		(?var pa:hasPointerState ?ps),
		(?ps pa:atProgramPoint ?prevPP),
		(?prevPP pa:afterStatement ?prev)
		(?ps pa:stateValue ?val)
		(?ps pa:stateRelation ?rel)
		makeTemp(?ps2)
->
#		(?loopVarList rdf:item ?var)
		(?var pa:hasPointerStateInLoop ?ps2)
		(?ps2 pa:atProgramPoint ?pp)
		(?ps2 pa:inLoop ?forSt)
		(?ps2 pa:stateValue ?val)
		(?ps2 pa:stateRelation ?rel)
		(?ps2 pa:iteration ?iter)

]


#update programPoint of other vars in loops.
#invoke this from ForInit
[updateOtherVarInLoop:
		(1 1 updateOtherVarInLoopEntry(?prev,?st,?cond,?pp,?currVar)),
		(?varList rdf:type pa:varList),		
		(?varList rdf:item ?var),
		(?loopVarList rdf:type pa:loopVarList),		
		notEqual(?var, ?currVar),
		(?st c:hasParent ?forSt),
		(?var pa:hasPointerState ?ps),
		(?ps pa:atProgramPoint ?prevPP),
		(?prevPP pa:afterStatement ?prev)
		makeTemp(?ps2)
->
		(?var pa:hasPointerStateInLoop ?ps2),
		(?ps2 pa:atProgramPoint ?pp),
		(?prevPP pa:afterStatement ?prev)
		(?ps pa:atProgramPoint ?pp)
]

