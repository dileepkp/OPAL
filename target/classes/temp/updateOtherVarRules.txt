@prefix c: <http://www.semanticweb.org/yzhao30/ontologies/2015/7/c#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix pa: <http://www.semanticweb.org/aidb/ontologies/BugFindingOntology#> .
@prefix fl: <http://www.semanticweb.org/aidb/ontologies/FileLibraryOntology#> .
@prefix file0: <ftp:/home/demo/Downloads/PATO-ROSE-master/tools/onto-build-rose/test/word2vec.c#> .


[test1:
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		ge(?id,11)
		le(?id,20)
		(?varList rdf:type pa:varList)
		(?varList rdf:item ?var)
		(?var pa:hasPointerState ?ps)
		noValue(?ps pa:atProgramPoint ?pp)
		countLiteralValues(?varList,rdf:item,?total)
->
		(pa:varStatus 0 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', test1, ?total)
]

[test2:
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		ge(?id,11)
		le(?id,20)
		(?varList rdf:type pa:varList)
		(?varList rdf:item ?var)
		(?var pa:hasPointerState ?ps)
		(?ps pa:atProgramPoint ?pp)
->
		(pa:varStatus 1 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', test2)
]

[test3:
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		ge(?id,21)

		(?varList rdf:type pa:varList)
		(?varList rdf:item ?var)
		(?var pa:hasPointerState ?ps)
		noValue(?ps pa:atProgramPoint ?pp)
->
		(pa:varStatus 0 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', test3)
]

[test4:
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		ge(?id,21)

		(?varList rdf:type pa:varList)
		(?varList rdf:item ?var)
		(?var pa:hasPointerState ?ps)
		(?ps pa:atProgramPoint ?pp)
->
		(pa:varStatus 1 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', test4)
]

[test5:
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
	
		(?varList rdf:type pa:varList)
		(?varList rdf:item ?currVar)
		
->
		(pa:varStatus 1 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', test5)
]

[otherVarStatusCompare1:
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		noValue(pa:varStatus 0 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
->
		remove(0)
		(1 1 updateOtherVarCompleted(?next,?cond))
		(1 1 otherVarRemove(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', compare1)
]

[otherVarStatusCompare2:
		(1 1 otherVarStatusCompare(?prev,?next,?cond,?pp,?currVar))
		(pa:varStatus 0 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
->
		remove(0)
		(1 1 otherVarRemove(?prev,?next,?cond,?pp,?currVar))
		print('updateOtherVarFile', compare2)
]


[updateOtherVarRemove:
		(1 1 otherVarRemove(?prev,?next,?cond,?pp,?currVar))
		(pa:varStatus ?status updateOtherVar(?prev,?next,?cond,?pp,?currVar))
->
#		remove(0)
		remove(1)
#		(1 1 updateOtherVarCompleted(?next,?cond))
#		print('update other var remove')
		print('updateOtherVarFile', remove)
]


[updateOtherVarRemove:
		(-2 -2 -2)
		(1 1 updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		(?id ?var updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		ge(?id,11)
->
#		remove(0)
#		remove(1)
		(1 1 updateOtherVarCompleted(?next,?cond))
		print('update other var remove')
]



#if the prev is cfg exit of for loop, consider only the last iteration

#update programPoint of other vars.
#applied when prev is cfg exit of for statement
[updateOtherVar2:
	(-2 -2 -2)
		(1 1 updateOtherVar(?prev,?next,?cond,?pp,?currVar)),
		(1 1 totalIterations(?prev,?cond,?iter,?var,?index))
(pa:otherVarCount ?cnt updateOtherVar(?prev,?next,?cond,?pp,?currVar))
		addOne(?cnt,?cnt1)
		
		(?varList rdf:type pa:varList),		
		(?varList rdf:item ?var),
		(?varList pa:baseConditions ?baseConditions)
		(?pp pa:baseConditions ?baseConditions)		
		notEqual(?var, ?currVar),
		(?var pa:hasPointerState ?ps),
		(?ps pa:atProgramPoint ?prevPP),
		(?prevPP pa:afterStatement ?prev)
		strConcat(?prev,?prev2)
		regex(?prev2,'.*exit$')
		(?prev c:hasParent ?prevprev)
		(?loopList rdf:type pa:loopList)
		(?loopList rdf:item ?loopItem)
		(?prevprev rdf:type ?loopItem)
		
		(?prevPP pa:iteration ?iter)
		
		makeTemp(?pp4)
		(?pp pa:afterStatement ?next),
		(?pp pa:hasProgramConditions ?cond),
#		(?pp pa:iteration ?iter)

->
		(?pp4 pa:afterStatement ?next),
		(?pp4 pa:hasProgramConditions ?cond),
		(?pp4 pa:iteration ?index)
		(?pp4 pa:baseConditions ?baseConditions)		
		remove(1)
		remove(2)
		(pa:otherVarCount ?cnt1 updateOtherVar(?prev,?next,?cond,?pp,?currVar))

		(?ps pa:atProgramPoint ?pp4)
#		(21 ?var updateOtherVar(?prev,?next,?cond,?pp4,?currVar))
		print('updateOtherVar2',?var,'st:',?next)
#(1 1 updateOtherVarProcessed(?prev,?next,?cond,?pp,?currVar))

]

