@prefix c: <http://www.semanticweb.org/yzhao30/ontologies/2015/7/c#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix pa: <http://www.semanticweb.org/aidb/ontologies/BugFindingOntology#> .

# find all fclose where fp pointsToResource and doesn't have fopen
# in the path
pa:queryList pa:contains pa:1_0 .
pa:1_0 rdf:type pa:query .
pa:1_0 pa:queryType pa:EnumQuery.
pa:1_0 pa:programPointSettings pa:preCall .
pa:1_0 pa:queryModel pa:SPARQL .
pa:1_0 pa:hasQuery pa:1_2 .
pa:1_2 pa:value  ''' SELECT DISTINCT ?exp ?var (c:VariableRef as ?varType)
        WHERE {
                ?exp rdf:type c:ExpressionStatement.
		?exp c:hasExpression ?func.
              ?func rdf:type c:FunctionCall.
		?func c:call ?call.
		?call rdf:type c:FunctionRef.
		?call c:hasName 'fclose'.
		?func c:hasArgumentExpr ?y.
		?y c:NthArg '0'.
		?y c:referTo ?var.

		?var pa:hasPointerState ?ps . 
		?ps pa:pointsToResource ?res .
		?ps pa:atProgramPoint ?pp.
		?pp pa:afterStatement ?expb4.
		?expb4 pa:nextStatement ?exp.
		?ps pa:hasConditions ?cond.

		MINUS{
#                ?exp2 rdf:type c:ExpressionStatement.
		?exp2 c:hasExpression/c:call/c:hasName 'fopen'.
		?var pa:hasPointerState ?ps2 . 
		?ps2 pa:atProgramPoint ?pp2.
		?pp2 pa:afterStatement ?exp2.
		?ps2 pa:hasConditions ?cond2.
		?cond rdf:item* ?cond2.

}
            }'''  .


SELECT DISTINCT ?exp 
        WHERE {
                ?exp rdf:type c:ExpressionStatement.
		?exp2 c:hasExpression/c:call/c:hasName 'fclose'.

		MINUS{
                ?exp2 rdf:type c:ExpressionStatement.
		?exp2 c:hasExpression/c:call/c:hasName 'fopen'.
		?exp2 (pa:nextStatement)* ?exp.

}
