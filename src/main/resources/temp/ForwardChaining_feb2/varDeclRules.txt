@prefix c: <http://www.semanticweb.org/yzhao30/ontologies/2015/7/c#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix pa: <http://www.semanticweb.org/aidb/ontologies/BugFindingOntology#> .
@prefix fl: <http://www.semanticweb.org/aidb/ontologies/FileLibraryOntology#> .


###############################################################################################################################
################################ Analyze Variable Declarations ############################################################


#A pointer file variable declaration without assignment
[analyzeFirstStatement1:
#		(1 1 analyzeStatement(?st, ?pp, ?cond)),
		(1 1 execute(?prev,?st,?cond,?pp)),
		(?st rdf:type c:Variable),
		noValue(?st,c:hasInitializer),
		noValue(?st,pa:tempStateValue),
		(?st c:hasType c:pointer_type)
		(?st c:hasBaseType c:_IO_FILE)
		(?pp pa:baseConditions ?baseConditions)
->
		(1 1 makePS(?st, ?pp, ?cond)),
		(1 1 updateVarList(?st,?baseConditions,?cond))

]

#A long long variable declaration without assignment
[analyzeFirstStatement2:
(-2 -2 -2)
#		(1 1 analyzeStatement(?st, ?pp, ?cond)),
		(1 1 execute(?prev,?st,?cond,?pp)),
		(?st rdf:type c:Variable),
		noValue(?st,c:hasInitializer),
		(?st c:hasType ?dt)
		(?pp pa:baseConditions ?baseConditions)

		(?intDataTypeList rdf:type pa:intDataTypeList)
		(?intDataTypeList rdf:item ?dt)
->
		(1 1 updateVarList(?st,?baseConditions,?cond))
		(1 1 makePS(?st, ?pp, ?cond))
		
		print('A int type variable declaration without assignment')
]


#A int variable declaration without assignment
[analyzeFirstStatement2:
		(1 1 execute(?prev,?st,?cond,?pp))
		(?st rdf:type c:Variable),
		noValue(?st,c:hasInitializer),
		(?st c:hasType ?dt)
		(?pp pa:baseConditions ?baseConditions)
		(?pp pa:iteration ?iter)

		(?intDataTypeList rdf:type pa:intDataTypeList)
		(?intDataTypeList rdf:item ?dt)
		makeTemp(?ps)
->
		
		print('int variable declaration without assignment')
		(1 1 updateVarList(?st,?baseConditions,?cond))
		(?st pa:hasPointerState ?ps),
		(?ps pa:atProgramPoint ?pp),
	
		(1 1 completed(?st,?cond,?iter,?baseConditions))
		(1 1 updateOtherVar(?prev,?st,?cond,?pp,?st,?iter,?iter))
]

#A pointer int variable declaration without assignment
[analyzeFirstStatement2:
		(1 1 execute(?prev,?st,?cond,?pp))
		(?st rdf:type c:Variable),
		noValue(?st,c:hasInitializer),
		(?st c:hasBaseType ?dt)
		(?st c:hasType c:pointer_type)
		(?pp pa:baseConditions ?baseConditions)
		(?pp pa:iteration ?iter)

		(?intDataTypeList rdf:type pa:intDataTypeList)
		(?intDataTypeList rdf:item ?dt)
		makeTemp(?ps)
->
		
		print('pointer int variable declaration without assignment')
		(1 1 updateVarList(?st,?baseConditions,?cond))
		(?st pa:hasPointerState ?ps),
		(?ps pa:atProgramPoint ?pp),
	
		(1 1 completed(?st,?cond,?iter,?baseConditions))
		(1 1 updateOtherVar(?prev,?st,?cond,?pp,?st,?iter,?iter))
]


#A long long variable declaration with assignment
[analyzeFirstStatement2_1:
#		(1 1 analyzeStatement(?vardecl, ?pp, ?cond)),
		(1 1 execute(?prev,?vardecl,?cond,?pp)),
		(?vardecl rdf:type c:VariableDecl)
		(?vardecl c:hasInitializer ?assign)
		(?vardecl c:hasType ?dt)
		(?assign rdf:type c:AssignInitializer)
		(?assign c:hasInitialValue ?value)
#		(?operand c:hasOperand ?value)
		(?value rdf:type c:Value)
		(?value c:hasValue ?concreteVal)
		(?pp pa:iteration ?iter)
		(?pp pa:baseConditions ?baseConditions)

		(?intDataTypeList rdf:type pa:intDataTypeList)
		(?intDataTypeList rdf:item ?dt)
->
		(1 1 updateVarList(?vardecl,?baseConditions,?cond))
		(1 1 makePS_comp(?vardecl, ?pp, ?cond,?concreteVal, pa:equals))
		(1 1 completed(?vardecl,?cond,?iter,?baseConditions))
#		(1 1 updateOtherVar(?prev,?vardecl,?cond,?pp,?vardecl,?iter,?iter))
		
		print('A int type variable declaration with assignment')
]


# Skip array types
[analyzeFirstStatement3:
#		(1 1 analyzeStatement(?st, ?pp, ?cond)),
		(1 1 execute(?prev,?st,?cond,?pp)),
		(?st rdf:type c:Variable),
		noValue(?st,c:hasInitializer),
		(?st c:hasType c:array_type)
		(?pp pa:baseConditions ?baseConditions)
		(?pp pa:iteration ?iter)

->
		
		(1 1 completed(?st,?cond,?iter,?baseConditions))
		(1 1 updateOtherVarCompleted(?st,?cond))
		print('analyze first statement: Skip array types')
]



